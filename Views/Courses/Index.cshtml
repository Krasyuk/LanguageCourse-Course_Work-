@model LanguageCourses.ViewModels.Models.CourseViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Courses</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" asp-route-page="@Model.PageViewModel.PageIndex">
    <div class="form-action no-color">
        <label>Courses name: </label>
        <input name="Name" value="@Model.CoursesFilterViewModel.Name" />
        <input type="submit" value="Filter" class="btn btn-success" />
        <br />
        <label asp-for="CoursesFilterViewModel.Cost"></label>
        <input name="Cost" value="@Model.CoursesFilterViewModel.Cost" />

        <label asp-for="CoursesFilterViewModel.NumberOfhouse"></label>
        <input name="NumberOfHouse" value="@Model.CoursesFilterViewModel.NumberOfhouse" />

        <label asp-for="CoursesFilterViewModel.TrainingProgramm"></label>
        <input name="TrainingProgramm" value="@Model.CoursesFilterViewModel.TrainingProgramm" />
        <input type="submit" value="Filter" class="btn btn-success" />
        <br />
        <label asp-for="CoursesFilterViewModel.FromCost"></label>
        <input name="FromCost" value="@Model.CoursesFilterViewModel.FromCost" />

        <label asp-for="CoursesFilterViewModel.ToCost"></label>
        <input name="ToCost" value="@Model.CoursesFilterViewModel.ToCost" />

        <input type="submit" value="Filter" class="btn btn-success" />
        <a asp-action="Index">Back to Full List</a>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortState="@Model.SortViewModel.CoursesName" asp-route-page="@Model.PageViewModel.PageIndex">
                    @Html.DisplayNameFor(model => model.Course.Name)
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortState="@Model.SortViewModel.CoursesTrainingProgram" asp-route-page="@Model.PageViewModel.PageIndex">
                    @Html.DisplayNameFor(model => model.Course.TrainingProgram)
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortState="@Model.SortViewModel.CoursesDescription" asp-route-page="@Model.PageViewModel.PageIndex">
                    @Html.DisplayNameFor(model => model.Course.Description)
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortState="@Model.SortViewModel.CoursesIntensityOfClasses" asp-route-page="@Model.PageViewModel.PageIndex">
                    @Html.DisplayNameFor(model => model.Course.IntensityOfClasses)
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortState="@Model.SortViewModel.CoursesGroupSize" asp-route-page="@Model.PageViewModel.PageIndex">
                    @Html.DisplayNameFor(model => model.Course.GroupSize)
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortState="@Model.SortViewModel.CoursesFreePlaces" asp-route-page="@Model.PageViewModel.PageIndex">
                    @Html.DisplayNameFor(model => model.Course.FreePlaces)
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortState="@Model.SortViewModel.CoursesNumberOfHours" asp-route-page="@Model.PageViewModel.PageIndex">
                    @Html.DisplayNameFor(model => model.Course.NumberOfHours)
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortState="@Model.SortViewModel.CoursesCost" asp-route-page="@Model.PageViewModel.PageIndex">
                    @Html.DisplayNameFor(model => model.Course.Cost)
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortState="@Model.SortViewModel.CoursesTeacherId" asp-route-page="@Model.PageViewModel.PageIndex">
                    @Html.DisplayNameFor(model => model.Course.Teacher.SurName)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Courses)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TrainingProgram)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IntensityOfClasses)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GroupSize)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FreePlaces)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NumberOfHours)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cost)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Teacher.SurName)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.CourseId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.CourseId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.CourseId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.PageViewModel.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.PageViewModel.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortState="@Model.SortViewModel.CurrentState"
   asp-route-page="@(Model.PageViewModel.PageIndex - 1)"
   asp-route-name="@Model.CoursesFilterViewModel.Name"
   class="btn btn-default @prevDisabled">
    Previous
</a>

<a asp-action="Index"
   asp-route-sortState="@Model.SortViewModel.CurrentState"
   asp-route-page="@(Model.PageViewModel.PageIndex+1)"
   asp-route-name="@Model.CoursesFilterViewModel.Name"
   class="btn btn-default @nextDisabled">
    Next
</a>
